{"version":3,"sources":["serviceWorker.js","components/Auth/signUp.js","components/Auth/signIn.js","controllers/home.js","components/Notes/FirebaseConfig/firebaseConfig.js","components/Notes/notesComponent.js","components/Notes/addNotes.js","components/Notes/notes.js","controllers/mainPage.js","controllers/deleted.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SignUp","props","handleChange","event","checkbox","target","type","setState","name","checked","value","validate","nameError","emailError","passwordError","email","password","includes","length","handleSubmit","preventDefault","this","className","hidden","htmlFor","placeholder","noValidate","onChange","onClick","handleChangeChecked","Component","SignIn","Home","DATABASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","NotesComponent","noteName","noteContent","noteId","id","confirm","deleteNote","handleRemove","AddNotes","bind","saveNote","noteInput","ref","input","Notes","notes","geekNotes","firebase","initializeApp","dataBase","database","child","on","snap","push","key","val","i","splice","remove","note","set","map","MainPage","Trash","ReactDOM","render","history","browserHistory","path","component","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c24fb0ee.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n/*------------------> SIGN UP <--------------------*/\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            nameError: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        }\r\n        this.state ={ checked : true }\r\n    }\r\n\r\n //Controlador de cambios, lee el nombre del campo y actualiza el estado con él\r\n    handleChange = event => {\r\n        const checkbox = event.target.type === 'checkbox';\r\n        this.setState({    //establecer el estado\r\n            [event.target.name]: checkbox\r\n            ? event.target.checked\r\n            : event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeChecked(checked){\r\n        this.setState({checked});\r\n    }\r\n    \r\n\r\n    validate = () =>{\r\n        let nameError = '';\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let emailRegEx = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n\r\n        if (!this.state.name){\r\n            nameError = 'Name cannot be empty';\r\n        }\r\n\r\n        if (!this.state.email.match(emailRegEx)){\r\n            emailError = 'Invalid E-mail';\r\n        }\r\n        if (!this.state.password) {\r\n            passwordError = 'Password cannot be empty';\r\n        }\r\n        if (this.state.password.includes(' ')) {\r\n            passwordError = 'Password cannot have spaces';\r\n        }\r\n        if (this.state.password.length < 6) {\r\n            passwordError = 'Password required at least 6 characters';\r\n        }\r\n\r\n        if (emailError || nameError || passwordError){\r\n            this.setState({emailError, nameError, passwordError});\r\n            return false; \r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const resetState ={\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            nameError: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        };\r\n\r\n        const valid = this.validate();\r\n        if (valid) {\r\n            console.log(this.state);\r\n            //clear Form/\r\n             this.setState(resetState);\r\n            \r\n        }\r\n       \r\n\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\" hidden={this.state.checked ? false : true}>\r\n          <div className=\"signUp-form\">\r\n              <h1 className=\"signUpTitle\">Sign Up</h1>\r\n              <form>\r\n                  <div className=\"name\">\r\n                      <label htmlFor=\"name\">Name: </label>\r\n                      <input \r\n                      value={this.state.name} //valor del estado\r\n                      type=\"text\" \r\n                      placeholder=\"name\" \r\n                      className=\"name\"\r\n                      name=\"name\" \r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                      />\r\n                      <div className='nameError'>{this.state.nameError}</div>\r\n                  </div>\r\n                  <div className=\"email\">\r\n                      <label htmlFor=\"email\">E-mail </label>\r\n                      <input \r\n                      value={this.state.email}\r\n                      type=\"email\" \r\n                      placeholder=\"e-mail@\" \r\n                      className=\"email\"\r\n                      name=\"email\" \r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                      />\r\n                      <div className='emailError'>{this.state.emailError}</div>\r\n                  </div>\r\n                  <div className=\"password\">\r\n                      <label htmlFor=\"password\">Password </label>\r\n                      <input \r\n                      value={this.state.password}\r\n                      type=\"password\" \r\n                      className=\"password\" \r\n                      placeholder=\"password\" \r\n                      name=\"password\" \r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                      />\r\n                      <div className='passwordError'>{this.state.passwordError}</div>\r\n                  </div>\r\n                  <div className=\"createAccount\">\r\n                    <button onClick={this.handleSubmit} className='signUpBtn'> Create Account </button>\r\n                    <p/>\r\n                    <div onClick={() => this.handleChangeChecked(false)}>Already have an Account?</div> \r\n                    <div>Forgot the password?</div>\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\n/*------------------> SIGN IN <--------------------*/\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            email: '',\r\n            password: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        }\r\n        this.state = { checked : false}\r\n\r\n    }\r\n\r\n //Controlador de cambios, lee el nombre del campo y actualiza el estado con él\r\n    handleChange = event => {\r\n        const checkbox = event.target.type === 'checkbox';\r\n        this.setState({    //establecer el estado\r\n            [event.target.name]: checkbox\r\n            ? event.target.checked\r\n            : event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeChecked(checked){\r\n        this.setState({checked});\r\n    }\r\n\r\n    validate = () =>{\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let emailRegEx = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n\r\n        if (!this.state.email.match(emailRegEx)){\r\n            emailError = 'Invalid E-mail';\r\n        }\r\n\r\n        if (this.state.password.length < 6) {\r\n            passwordError = 'Password required at least 6 characters';\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            passwordError = 'Password cannot be empty';\r\n        }\r\n\r\n        if (this.state.password.includes(' ')) {\r\n            passwordError = 'Password cannot have spaces';\r\n        }\r\n\r\n        if (emailError || passwordError){\r\n            this.setState({emailError, passwordError});\r\n            return false; \r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const resetState ={\r\n            email: '', //esta mandando este email! D:\r\n            password: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        };\r\n\r\n        const valid = this.validate();\r\n        if (valid) {\r\n            console.log(this.state);\r\n            //clear Form/\r\n             this.setState(resetState);\r\n            \r\n        }\r\n       \r\n\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\" hidden={this.state.checked ? false : true}>\r\n          <div className=\"signIn-form\">\r\n              <h1 className='signInTitle'>Sign oon</h1>\r\n              <form>\r\n                  <div className=\"email\">\r\n                      <label htmlFor=\"email\">E-mail</label>\r\n                      <input \r\n                      value={this.state.email}\r\n                      type=\"email\" \r\n                      placeholder=\"e-mail@\" \r\n                      className=\"email\"\r\n                      name=\"email\"\r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                      />\r\n                      <div className='emailError'>{this.state.emailError}</div>\r\n                  </div>\r\n                  <div className=\"password\">\r\n                      <label htmlFor=\"password\">Password </label>\r\n                      <input \r\n                      value={this.state.password}\r\n                      type=\"password\" \r\n                      className=\"password\" \r\n                      placeholder=\"password\" \r\n                      name=\"password\" \r\n                      noValidate\r\n                      onChange={this.handleChange}\r\n                      />\r\n                      <div className='passwordError'>{this.state.passwordError}</div>\r\n                  </div>\r\n                  <div className=\"logIn\">\r\n                    <button onClick={this.handleSubmit} className='signInBtn'> Log In </button>\r\n                    <p/>\r\n                    <div onClick={() => this.handleChangeChecked(true)}>Don't have an Account yet?</div> \r\n                    <div>Forgot the password?</div>\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport '../Styles/signUp.css';\r\nimport SignUp from '../components/Auth/signUp';\r\nimport SignIn from '../components/Auth/signIn';\r\n\r\n\r\nclass Home extends Component {\r\n  render(){\r\n    return (\r\n      <div className='Home'>\r\n        <h1 className='geekNotes'>Geek Notes</h1>\r\n         <SignUp/>\r\n         <SignIn/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","\r\nexport const DATABASE_CONFIG = {\r\n    apiKey: \"AIzaSyCsAqFzl0bu-olyNOJi3dlEcL-T3u1aXto\",\r\n    authDomain: \"geek-notes.firebaseapp.com\",\r\n    databaseURL: \"https://geek-notes.firebaseio.com\",\r\n    projectId: \"geek-notes\",\r\n    storageBucket: \"geek-notes.appspot.com\",\r\n    messagingSenderId: \"1090706594670\",\r\n    appId: \"1:1090706594670:web:222a90d229151654263f7f\"\r\n  };","import React, {Component} from 'react';\r\n\r\nclass NotesComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.noteName = props.noteName;\r\n        this.noteContent = props.noteContent;\r\n        this.noteId = props.noteId;\r\n    }\r\n\r\n    handleRemove(id){\r\n        const response = window.confirm('Do you want delete this note?');\r\n        if(response) {\r\n        this.props.deleteNote(id);\r\n        }\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div className='note'>\r\n        <span\r\n        onClick={() => this.handleRemove(this.noteId)}>&times;</span>\r\n        <p>{this.noteContent}</p>\r\n        </div>\r\n\r\n        )}\r\n}\r\n\r\nexport default NotesComponent;","import React, { Component } from 'react';\r\n\r\nclass AddNotes extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {checked: false}\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.saveNote = this.saveNote.bind(this);\r\n    }\r\n\r\n    handleChange(checked){\r\n        this.setState({ checked });\r\n    }\r\n\r\n    saveNote (){\r\n        this.props.saveNote(this.noteName.value);\r\n        this.props.saveNote(this.noteInput.value);\r\n        this.noteName.value = '';\r\n        this.noteInput.value = '';\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n        <div className ='addNotes'>\r\n            <button className ='addNotes'\r\n            onClick={() => this.handleChange(true)}>Write a Note</button>\r\n        </div>\r\n        <div className ='hiddenAddNoteWindow' hidden={this.state.checked ? false : true}>\r\n            <div className = 'writeNote'>\r\n            <input \r\n                ref={input => {this.noteName = input;}}\r\n                type = 'text' \r\n                className='nameNotes' \r\n                placeholder = 'Write the name of your note'>\r\n                </input>\r\n                <p/>\r\n                <input\r\n                ref={input => {this.noteInput = input;}}\r\n                type = 'text'\r\n                className = 'writeNote'\r\n                placeholder = 'Start write here...'/>\r\n                <button \r\n                className = 'saveNote'\r\n                onClick={this.saveNote}>Done</button> \r\n            </div>\r\n                \r\n        </div>\r\n        </div>\r\n        )}\r\n}\r\n\r\nexport default AddNotes;","import firebase from 'firebase/app';\r\nimport  { DATABASE_CONFIG } from './FirebaseConfig/firebaseConfig.js';\r\nimport 'firebase/database';\r\nimport React, { Component } from 'react';\r\n//import './styles/notes.css';\r\nimport NotesComponent from './notesComponent';\r\nimport AddNotes from './addNotes';\r\n\r\nclass Notes extends Component{\r\n    constructor (props){\r\n        super (props);\r\n        this.state = {\r\n            notes: [\r\n\r\n            ]\r\n        };\r\n\r\n        this.geekNotes = firebase.initializeApp(DATABASE_CONFIG);\r\n        this.dataBase = this.geekNotes.database().ref().child('notes');\r\n        this.saveNote = this.saveNote.bind(this);\r\n        this.deleteNote = this.deleteNote.bind(this);\r\n    }\r\n //Se encarga de cargar los datos dentro del estado//\r\n    componentDidMount() {\r\n        const { notes } = this.state;\r\n        this.dataBase.on('child_added', snap => {\r\n            notes.push({\r\n                noteId: snap.key,\r\n                noteName: snap.val().noteName,\r\n                noteContent: snap.val().noteContent\r\n            })\r\n            this.setState({ notes });\r\n        });\r\n\r\n        this.dataBase.on('child_removed', snap => {\r\n            for(let i = 0; i < notes.length; i++){\r\n                if(notes[i].noteId === snap.key) {\r\n                    notes.splice(i, 1);\r\n                }\r\n            }\r\n            this.setState({ notes });\r\n        });\r\n    }\r\n\r\n    deleteNote(noteId) {\r\n        this.dataBase.child(noteId).remove();\r\n    }\r\n\r\n    saveNote(note) {\r\n        \r\n        this.dataBase.push().set({ noteContent: note});\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className ='notesApp'>\r\n            <div className ='navBar'>\r\n                <h1> Aqui va a ir el NavBar</h1>\r\n                <input type='text' className='searchInput'></input>\r\n                <button className = 'searchBtn'>Do it!</button>\r\n            </div>\r\n            <div className ='notesContainer'>\r\n                <h1>Your Notes Will Appear Here!</h1>\r\n                <ul>\r\n                {\r\n                    this.state.notes.map(note => {\r\n                        return(\r\n                            <NotesComponent \r\n                            noteName = {note.noteName}\r\n                            noteContent = {note.noteContent}\r\n                            noteId = {note.noteId}\r\n                            key = {note.noteId}\r\n                            deleteNote = {this.deleteNote}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n                <div className = 'addNotes'>\r\n                    <h1>Agregar nota</h1>\r\n                    <AddNotes saveNote={this.saveNote}/>\r\n                </div>\r\n            </div>\r\n            <div className = 'userOptions'>\r\n                <h1>Aqui va a ir las opciones de usuario.</h1>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notes;","import React, { Component } from 'react';\r\nimport Notes from '../components/Notes/notes';\r\n\r\nexport default class MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Notes/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Trash extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hola, Esta es tu papelera</h1>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route, browserHistory } from 'react-router';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './controllers/home';\r\nimport MainPage from './controllers/mainPage';\r\nimport Trash from './controllers/deleted';\r\nimport './Styles/index.css';\r\n\r\nReactDOM.render(\r\n  <Router history={browserHistory}> \r\n    <Route path=\"/\" component={Home}/>\r\n    <Route path=\"/mainPage\" component={MainPage}/>\r\n    <Route path=\"/delete\" component={Trash}/>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}